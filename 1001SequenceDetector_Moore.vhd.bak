library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity VHDL_MOORE_FSM_Sequence_Detector is
    Port (
        clock : in STD_LOGIC;
        reset : in STD_LOGIC;
        sequence_in : in STD_LOGIC;
        detector_out : out STD_LOGIC
    );
end VHDL_MOORE_FSM_Sequence_Detector;

architecture Behavioral of VHDL_MOORE_FSM_Sequence_Detector is

    type state_type is (S0, S1, S2, S3, S4);
    signal current_state, next_state : state_type;

begin

    -- State register process
    process(clock, reset)
    begin
        if reset = '1' then
            current_state <= S0;
        elsif rising_edge(clock) then
            current_state <= next_state;
        end if;
    end process;

    -- Next state logic
    process(current_state, sequence_in)
    begin
        case current_state is
            when S0 =>
                if sequence_in = '1' then
                    next_state <= S1;
                else
                    next_state <= S0;
                end if;

            when S1 =>
                if sequence_in = '0' then
                    next_state <= S2;
                else
                    next_state <= S1;
                end if;

            when S2 =>
                if sequence_in = '0' then
                    next_state <= S3;
                else
                    next_state <= S1;
                end if;

            when S3 =>
                if sequence_in = '1' then
                    next_state <= S4;
                else
                    next_state <= S0;
                end if;

            when S4 => -- Final detection state
                if sequence_in = '1' then
                    next_state <= S1;
                else
                    next_state <= S0;
                end if;
        end case;
    end process;

    -- Output logic (Moore output depends only on state)
    process(current_state)
    begin
        case current_state is
            when S4 =>
                detector_out <= '1';
            when others =>
                detector_out <= '0';
        end case;
    end process;

end Behavioral;

